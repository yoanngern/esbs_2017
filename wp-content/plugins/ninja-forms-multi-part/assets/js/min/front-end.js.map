{"version":3,"sources":["../../../config-wrap-start-default.js","../lib/almond.js","views/header.js","views/footer.js","views/formContent.js","models/partModel.js","models/partCollection.js","controllers/loadFilters.js","controllers/conditionalLogic.js","controllers/renderRecaptcha.js","controllers/renderHelpText.js","controllers/loadControllers.js","main.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","Marionette","ItemView","extend","template","fullProgressBar","initialize","options","this","listenTo","collection","reRender","nfRadio","channel","fillProgressBar","model","getElement","render","templateHelpers","that","renderPartTitle","formModel","get","mp_display_titles","Backbone","Radio","request","_","invoke","getVisibleParts","title","renderBreadcrumbs","mp_breadcrumb","currentIndex","renderProgressBar","mp_progress_bar","percent","events","click .nf-breadcrumb","clickBreadcrumb","preventDefault","setElement","target","data","renderNextPrevious","showNext","showPrevious","visibleParts","where","visible","prevLabel","nfMPSettings","nextLabel","HeaderView","FooterView","LayoutView","regions","header","body","footer","changePart","renderHeaderFooter","onRender","show","formContentViewFilters","sortedArray","without","formContentView","formTop","el","closest","offset","top","window","scrollTop","click .nf-next","click .nf-previous","clickNext","next","clickPrevious","previous","Model","fieldErrors","defaults","errors","filterFormContentData","maybeChangeActivePart","cid","on","changeVisible","set","Number","formContentData","formContentLoadFilters","empty","isArray","cells","partFields","pluck","each","cell","fields","flatten","union","fieldModel","validateFields","showFields","hideFields","PartModel","Collection","currentElement","models","at","silent","partErrors","trigger","mp_validate","partModel","FormContentView","PartCollection","getformContentView","formContentLoad","first","type","partCollection","reply","showPart","hidePart","conditionModel","then","changePartVisibility","mpResetFlag","Date","now","findWhere","key","checkWhen","alreadyTriggered","fieldID","response","opts","theme","sitekey","grecaptcha","jBox","content","ConditionalLogic","RenderRecaptcha","RenderHelpText","LoadFilters","LoadControllers","Application","loadFilters","loadControllers","onStart","start"],"mappings":"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","file":"front-end.js","sourcesContent":["(function () {\n","/**\r\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\r\n * Available via the MIT or new BSD license.\r\n * see: http://github.com/jrburke/almond for details\r\n */\r\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\r\n//be followed.\r\n/*jslint sloppy: true */\r\n/*global setTimeout: false */\r\n\r\nvar requirejs, require, define;\r\n(function (undef) {\r\n    var main, req, makeMap, handlers,\r\n        defined = {},\r\n        waiting = {},\r\n        config = {},\r\n        defining = {},\r\n        hasOwn = Object.prototype.hasOwnProperty,\r\n        aps = [].slice,\r\n        jsSuffixRegExp = /\\.js$/;\r\n\r\n    function hasProp(obj, prop) {\r\n        return hasOwn.call(obj, prop);\r\n    }\r\n\r\n    /**\r\n     * Given a relative module name, like ./something, normalize it to\r\n     * a real name that can be mapped to a path.\r\n     * @param {String} name the relative name\r\n     * @param {String} baseName a real name that the name arg is relative\r\n     * to.\r\n     * @returns {String} normalized name\r\n     */\r\n    function normalize(name, baseName) {\r\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\r\n            foundI, foundStarMap, starI, i, j, part,\r\n            baseParts = baseName && baseName.split(\"/\"),\r\n            map = config.map,\r\n            starMap = (map && map['*']) || {};\r\n\r\n        //Adjust any relative paths.\r\n        if (name && name.charAt(0) === \".\") {\r\n            //If have a base name, try to normalize against it,\r\n            //otherwise, assume it is a top-level require that will\r\n            //be relative to baseUrl in the end.\r\n            if (baseName) {\r\n                name = name.split('/');\r\n                lastIndex = name.length - 1;\r\n\r\n                // Node .js allowance:\r\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\r\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\r\n                }\r\n\r\n                //Lop off the last part of baseParts, so that . matches the\r\n                //\"directory\" and not name of the baseName's module. For instance,\r\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\r\n                //want the directory, \"one/two\" for this normalization.\r\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\r\n\r\n                //start trimDots\r\n                for (i = 0; i < name.length; i += 1) {\r\n                    part = name[i];\r\n                    if (part === \".\") {\r\n                        name.splice(i, 1);\r\n                        i -= 1;\r\n                    } else if (part === \"..\") {\r\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\r\n                            //End of the line. Keep at least one non-dot\r\n                            //path segment at the front so it can be mapped\r\n                            //correctly to disk. Otherwise, there is likely\r\n                            //no path mapping for a path starting with '..'.\r\n                            //This can still fail, but catches the most reasonable\r\n                            //uses of ..\r\n                            break;\r\n                        } else if (i > 0) {\r\n                            name.splice(i - 1, 2);\r\n                            i -= 2;\r\n                        }\r\n                    }\r\n                }\r\n                //end trimDots\r\n\r\n                name = name.join(\"/\");\r\n            } else if (name.indexOf('./') === 0) {\r\n                // No baseName, so this is ID is resolved relative\r\n                // to baseUrl, pull off the leading dot.\r\n                name = name.substring(2);\r\n            }\r\n        }\r\n\r\n        //Apply map config if available.\r\n        if ((baseParts || starMap) && map) {\r\n            nameParts = name.split('/');\r\n\r\n            for (i = nameParts.length; i > 0; i -= 1) {\r\n                nameSegment = nameParts.slice(0, i).join(\"/\");\r\n\r\n                if (baseParts) {\r\n                    //Find the longest baseName segment match in the config.\r\n                    //So, do joins on the biggest to smallest lengths of baseParts.\r\n                    for (j = baseParts.length; j > 0; j -= 1) {\r\n                        mapValue = map[baseParts.slice(0, j).join('/')];\r\n\r\n                        //baseName segment has  config, find if it has one for\r\n                        //this name.\r\n                        if (mapValue) {\r\n                            mapValue = mapValue[nameSegment];\r\n                            if (mapValue) {\r\n                                //Match, update name to the new value.\r\n                                foundMap = mapValue;\r\n                                foundI = i;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (foundMap) {\r\n                    break;\r\n                }\r\n\r\n                //Check for a star map match, but just hold on to it,\r\n                //if there is a shorter segment match later in a matching\r\n                //config, then favor over this star map.\r\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\r\n                    foundStarMap = starMap[nameSegment];\r\n                    starI = i;\r\n                }\r\n            }\r\n\r\n            if (!foundMap && foundStarMap) {\r\n                foundMap = foundStarMap;\r\n                foundI = starI;\r\n            }\r\n\r\n            if (foundMap) {\r\n                nameParts.splice(0, foundI, foundMap);\r\n                name = nameParts.join('/');\r\n            }\r\n        }\r\n\r\n        return name;\r\n    }\r\n\r\n    function makeRequire(relName, forceSync) {\r\n        return function () {\r\n            //A version of a require function that passes a moduleName\r\n            //value for items that may need to\r\n            //look up paths relative to the moduleName\r\n            var args = aps.call(arguments, 0);\r\n\r\n            //If first arg is not require('string'), and there is only\r\n            //one arg, it is the array form without a callback. Insert\r\n            //a null so that the following concat is correct.\r\n            if (typeof args[0] !== 'string' && args.length === 1) {\r\n                args.push(null);\r\n            }\r\n            return req.apply(undef, args.concat([relName, forceSync]));\r\n        };\r\n    }\r\n\r\n    function makeNormalize(relName) {\r\n        return function (name) {\r\n            return normalize(name, relName);\r\n        };\r\n    }\r\n\r\n    function makeLoad(depName) {\r\n        return function (value) {\r\n            defined[depName] = value;\r\n        };\r\n    }\r\n\r\n    function callDep(name) {\r\n        if (hasProp(waiting, name)) {\r\n            var args = waiting[name];\r\n            delete waiting[name];\r\n            defining[name] = true;\r\n            main.apply(undef, args);\r\n        }\r\n\r\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\r\n            throw new Error('No ' + name);\r\n        }\r\n        return defined[name];\r\n    }\r\n\r\n    //Turns a plugin!resource to [plugin, resource]\r\n    //with the plugin being undefined if the name\r\n    //did not have a plugin prefix.\r\n    function splitPrefix(name) {\r\n        var prefix,\r\n            index = name ? name.indexOf('!') : -1;\r\n        if (index > -1) {\r\n            prefix = name.substring(0, index);\r\n            name = name.substring(index + 1, name.length);\r\n        }\r\n        return [prefix, name];\r\n    }\r\n\r\n    /**\r\n     * Makes a name map, normalizing the name, and using a plugin\r\n     * for normalization if necessary. Grabs a ref to plugin\r\n     * too, as an optimization.\r\n     */\r\n    makeMap = function (name, relName) {\r\n        var plugin,\r\n            parts = splitPrefix(name),\r\n            prefix = parts[0];\r\n\r\n        name = parts[1];\r\n\r\n        if (prefix) {\r\n            prefix = normalize(prefix, relName);\r\n            plugin = callDep(prefix);\r\n        }\r\n\r\n        //Normalize according\r\n        if (prefix) {\r\n            if (plugin && plugin.normalize) {\r\n                name = plugin.normalize(name, makeNormalize(relName));\r\n            } else {\r\n                name = normalize(name, relName);\r\n            }\r\n        } else {\r\n            name = normalize(name, relName);\r\n            parts = splitPrefix(name);\r\n            prefix = parts[0];\r\n            name = parts[1];\r\n            if (prefix) {\r\n                plugin = callDep(prefix);\r\n            }\r\n        }\r\n\r\n        //Using ridiculous property names for space reasons\r\n        return {\r\n            f: prefix ? prefix + '!' + name : name, //fullName\r\n            n: name,\r\n            pr: prefix,\r\n            p: plugin\r\n        };\r\n    };\r\n\r\n    function makeConfig(name) {\r\n        return function () {\r\n            return (config && config.config && config.config[name]) || {};\r\n        };\r\n    }\r\n\r\n    handlers = {\r\n        require: function (name) {\r\n            return makeRequire(name);\r\n        },\r\n        exports: function (name) {\r\n            var e = defined[name];\r\n            if (typeof e !== 'undefined') {\r\n                return e;\r\n            } else {\r\n                return (defined[name] = {});\r\n            }\r\n        },\r\n        module: function (name) {\r\n            return {\r\n                id: name,\r\n                uri: '',\r\n                exports: defined[name],\r\n                config: makeConfig(name)\r\n            };\r\n        }\r\n    };\r\n\r\n    main = function (name, deps, callback, relName) {\r\n        var cjsModule, depName, ret, map, i,\r\n            args = [],\r\n            callbackType = typeof callback,\r\n            usingExports;\r\n\r\n        //Use name if no relName\r\n        relName = relName || name;\r\n\r\n        //Call the callback to define the module, if necessary.\r\n        if (callbackType === 'undefined' || callbackType === 'function') {\r\n            //Pull out the defined dependencies and pass the ordered\r\n            //values to the callback.\r\n            //Default to [require, exports, module] if no deps\r\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\r\n            for (i = 0; i < deps.length; i += 1) {\r\n                map = makeMap(deps[i], relName);\r\n                depName = map.f;\r\n\r\n                //Fast path CommonJS standard dependencies.\r\n                if (depName === \"require\") {\r\n                    args[i] = handlers.require(name);\r\n                } else if (depName === \"exports\") {\r\n                    //CommonJS module spec 1.1\r\n                    args[i] = handlers.exports(name);\r\n                    usingExports = true;\r\n                } else if (depName === \"module\") {\r\n                    //CommonJS module spec 1.1\r\n                    cjsModule = args[i] = handlers.module(name);\r\n                } else if (hasProp(defined, depName) ||\r\n                           hasProp(waiting, depName) ||\r\n                           hasProp(defining, depName)) {\r\n                    args[i] = callDep(depName);\r\n                } else if (map.p) {\r\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\r\n                    args[i] = defined[depName];\r\n                } else {\r\n                    throw new Error(name + ' missing ' + depName);\r\n                }\r\n            }\r\n\r\n            ret = callback ? callback.apply(defined[name], args) : undefined;\r\n\r\n            if (name) {\r\n                //If setting exports via \"module\" is in play,\r\n                //favor that over return value and exports. After that,\r\n                //favor a non-undefined return value over exports use.\r\n                if (cjsModule && cjsModule.exports !== undef &&\r\n                        cjsModule.exports !== defined[name]) {\r\n                    defined[name] = cjsModule.exports;\r\n                } else if (ret !== undef || !usingExports) {\r\n                    //Use the return value from the function.\r\n                    defined[name] = ret;\r\n                }\r\n            }\r\n        } else if (name) {\r\n            //May just be an object definition for the module. Only\r\n            //worry about defining if have a module name.\r\n            defined[name] = callback;\r\n        }\r\n    };\r\n\r\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\r\n        if (typeof deps === \"string\") {\r\n            if (handlers[deps]) {\r\n                //callback in this case is really relName\r\n                return handlers[deps](callback);\r\n            }\r\n            //Just return the module wanted. In this scenario, the\r\n            //deps arg is the module name, and second arg (if passed)\r\n            //is just the relName.\r\n            //Normalize module name, if it contains . or ..\r\n            return callDep(makeMap(deps, callback).f);\r\n        } else if (!deps.splice) {\r\n            //deps is a config object, not an array.\r\n            config = deps;\r\n            if (config.deps) {\r\n                req(config.deps, config.callback);\r\n            }\r\n            if (!callback) {\r\n                return;\r\n            }\r\n\r\n            if (callback.splice) {\r\n                //callback is an array, which means it is a dependency list.\r\n                //Adjust args if there are dependencies\r\n                deps = callback;\r\n                callback = relName;\r\n                relName = null;\r\n            } else {\r\n                deps = undef;\r\n            }\r\n        }\r\n\r\n        //Support require(['a'])\r\n        callback = callback || function () {};\r\n\r\n        //If relName is a function, it is an errback handler,\r\n        //so remove it.\r\n        if (typeof relName === 'function') {\r\n            relName = forceSync;\r\n            forceSync = alt;\r\n        }\r\n\r\n        //Simulate async callback;\r\n        if (forceSync) {\r\n            main(undef, deps, callback, relName);\r\n        } else {\r\n            //Using a non-zero value because of concern for what old browsers\r\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\r\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\r\n            //If want a value immediately, use require('id') instead -- something\r\n            //that works in almond on the global level, but not guaranteed and\r\n            //unlikely to work in other AMD implementations.\r\n            setTimeout(function () {\r\n                main(undef, deps, callback, relName);\r\n            }, 4);\r\n        }\r\n\r\n        return req;\r\n    };\r\n\r\n    /**\r\n     * Just drops the config on the floor, but returns req in case\r\n     * the config return value is used.\r\n     */\r\n    req.config = function (cfg) {\r\n        return req(cfg);\r\n    };\r\n\r\n    /**\r\n     * Expose module registry for debugging and tooling\r\n     */\r\n    requirejs._defined = defined;\r\n\r\n    define = function (name, deps, callback) {\r\n        if (typeof name !== 'string') {\r\n            throw new Error('See almond README: incorrect module build, no module name');\r\n        }\r\n\r\n        //This module may not have dependencies\r\n        if (!deps.splice) {\r\n            //deps is not an array, so probably means\r\n            //an object literal or factory function for\r\n            //the value. Adjust args.\r\n            callback = deps;\r\n            deps = [];\r\n        }\r\n\r\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\r\n            waiting[name] = [name, deps, callback];\r\n        }\r\n    };\r\n\r\n    define.amd = {\r\n        jQuery: true\r\n    };\r\n}());\r\n\ndefine(\"../lib/almond\", function(){});\n\n","define( 'views/header',[], function() {\r\n\tvar view = Marionette.ItemView.extend( {\r\n\t\ttemplate: \"#tmpl-nf-mp-header\",\r\n \t\tfullProgressBar: false,\r\n\r\n \t\tinitialize: function( options ) {\r\n\t\t\tthis.listenTo( this.collection, 'change:part', this.reRender );\r\n\t\t\tthis.listenTo( this.collection, 'change:errors', this.reRender );\r\n\r\n\t\t\tthis.listenTo( nfRadio.channel( 'forms' ), 'before:submit', this.fillProgressBar );\r\n\t\t},\r\n\r\n\t\treRender: function() {\r\n\t\t\tthis.model = this.collection.getElement();\r\n\t\t\tthis.render();\r\n\t\t},\r\n\r\n\t\ttemplateHelpers: function() {\r\n\t\t\tvar that = this;\r\n\t\t\treturn {\r\n\t\t\t\trenderPartTitle: function() {\r\n\t\t\t\t\tif ( 'undefined' == typeof that.collection.formModel.get( 'settings' ).mp_display_titles || 0 == that.collection.formModel.get( 'settings' ).mp_display_titles ) return '';\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar template = Backbone.Radio.channel( 'app' ).request( 'get:template', '#tmpl-nf-mp-part-title' );\r\n\t\t\t\t\tvar parts = _.invoke( that.collection.getVisibleParts(), 'pick', [ 'title', 'errors', 'visible' ] )\r\n\t\t\t\t\tif ( 1 < parts.length ) {\r\n\t\t\t\t\t\treturn template( { title: this.title } );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn ''; \r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\trenderBreadcrumbs: function() {\r\n\t\t\t\t\tif ( 'undefined' == typeof that.collection.formModel.get( 'settings' ).mp_breadcrumb || 0 == that.collection.formModel.get( 'settings' ).mp_breadcrumb ) return '';\r\n\r\n\t\t\t\t\tvar template = Backbone.Radio.channel( 'app' ).request( 'get:template', '#tmpl-nf-mp-breadcrumbs' );\r\n\t\t\t\t\tvar parts = _.invoke( that.collection.getVisibleParts(), 'pick', [ 'title', 'errors', 'visible' ] )\r\n\t\t\t\t\tif ( 1 < parts.length ) {\r\n\t\t\t\t\t\treturn template( { parts: parts, currentIndex: that.collection.getVisibleParts().indexOf( that.model ) } );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn ''; \r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\trenderProgressBar: function() {\r\n\t\t\t\t\tif ( 'undefined' == typeof that.collection.formModel.get( 'settings' ).mp_progress_bar || 0 == that.collection.formModel.get( 'settings' ).mp_progress_bar ) return '';\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar template = Backbone.Radio.channel( 'app' ).request( 'get:template', '#tmpl-nf-mp-progress-bar' );\r\n\t\t\t\t\tvar currentIndex = that.collection.getVisibleParts().indexOf( that.model );\r\n\t\t\t\t\tvar percent = ( that.fullProgressBar ) ? 100 : currentIndex / that.collection.getVisibleParts().length * 100;\r\n\t\t\t\t\tif ( 1 < that.collection.getVisibleParts().length ) {\r\n\t\t\t\t\t\treturn template( { percent: percent } );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tevents: {\r\n\t\t\t'click .nf-breadcrumb': 'clickBreadcrumb'\r\n\t\t},\r\n\r\n\t\tclickBreadcrumb: function( e ) {\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.collection.setElement( this.collection.getVisibleParts()[ jQuery( e.target ).data( 'index' ) ] );\r\n\t\t},\r\n\r\n\t\tfillProgressBar: function( formModel ) {\r\n\t\t\tthis.fullProgressBar = true;\r\n\t\t\tthis.render();\r\n\t\t\tthis.fullProgressBar = false;\r\n\t\t}\r\n\t} );\r\n\r\n\treturn view;\r\n} );\n","define( 'views/footer',[], function() {\r\n\tvar view = Marionette.ItemView.extend( {\r\n\t\ttemplate: \"#tmpl-nf-mp-footer\",\r\n\r\n\t\tinitialize: function( options ) {\r\n\t\t\tthis.listenTo( this.collection, 'change:part', this.reRender );\r\n\t\t},\r\n\r\n\t\treRender: function() {\r\n\t\t\tthis.model = this.collection.getElement();\r\n\t\t\tthis.render();\r\n\t\t},\r\n\r\n\t\ttemplateHelpers: function() {\r\n\t\t\tvar that = this;\r\n\t\t\treturn {\r\n\t\t\t\trenderNextPrevious: function() {\r\n\t\t\t\t\tvar template = Backbone.Radio.channel( 'app' ).request( 'get:template', '#tmpl-nf-mp-next-previous' );\r\n\t\t\t\t\tvar showNext = false;\r\n\t\t\t\t\tvar showPrevious = false;\r\n\t\t\t\t\tvar visibleParts = that.collection.where( { visible: true } );\r\n\t\t\t\t\t\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * If our collection pointer isn't on the last visible part, show Next navigation.\r\n\t\t\t\t\t */\r\n\t\t\t\t\tif ( visibleParts.indexOf( that.model ) != visibleParts.length - 1 ) {\r\n\t\t\t\t\t\tshowNext = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * If our collection pointer isn't on the first visible part, show Previous navigation.\r\n\t\t\t\t\t */\r\n\t\t\t\t\tif ( visibleParts.indexOf( that.model ) != 0 ) {\r\n\t\t\t\t\t\tshowPrevious = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! showNext && ! showPrevious ) return '';\r\n\r\n\t\t\t\t\tvar prevLabel = that.collection.formModel.get( 'mp_prev_label' ) || nfMPSettings.prevLabel;\r\n\t\t\t\t\tvar nextLabel = that.collection.formModel.get( 'mp_next_label' ) || nfMPSettings.nextLabel;\r\n\r\n\t\t\t\t\treturn template( { showNext: showNext, showPrevious: showPrevious, prevLabel: prevLabel, nextLabel: nextLabel } );\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\treturn view;\r\n} );\r\n\n","define( 'views/formContent',[ 'views/header', 'views/footer' ], function( HeaderView, FooterView ) {\r\n\tvar view = Marionette.LayoutView.extend( {\r\n\t\ttemplate: \"#tmpl-nf-mp-form-content\",\r\n\r\n\t\tregions: {\r\n\t\t\theader: '.nf-mp-header',\r\n\t\t\tbody: '.nf-mp-body',\r\n\t\t\tfooter: '.nf-mp-footer'\r\n\t\t},\r\n\r\n\t\tinitialize: function( options ) {\r\n\t\t\tthis.formModel = options.formModel;\r\n\t\t\tthis.collection = options.data;\r\n\t\t\tthis.listenTo( this.collection, 'change:part', this.changePart );\r\n\t\t\tthis.listenTo( this.collection, 'change:visible', this.renderHeaderFooter );\r\n\t\t},\r\n\r\n\t\tonRender: function() {\r\n\t\t\tthis.header.show( new HeaderView( { collection: this.collection, model: this.collection.getElement() } ) );\r\n\r\n\t\t\t/*\r\n\t\t\t * Check our fieldContentViewsFilter to see if we have any defined.\r\n\t\t\t * If we do, overwrite our default with the view returned from the filter.\r\n\t\t\t */\r\n\t\t\tvar formContentViewFilters = nfRadio.channel( 'formContent' ).request( 'get:viewFilters' );\r\n\t\t\t\r\n\t\t\t/* \r\n\t\t\t* Get our first filter, this will be the one with the highest priority.\r\n\t\t\t*/\r\n\t\t\tvar sortedArray = _.without( formContentViewFilters, undefined );\r\n\t\t\tvar callback = sortedArray[1];\r\n\t\t\tthis.formContentView = callback();\r\n\t\t\t\r\n\t\t\tthis.body.show(  new this.formContentView( { collection: this.collection.getElement().get( 'formContentData' ) } ) );\r\n\t\t\tthis.footer.show( new FooterView( { collection: this.collection, model: this.collection.getElement() } ) );\r\n\t\t},\r\n\r\n\t\trenderHeaderFooter: function() {\r\n\t\t\tthis.header.show( new HeaderView( { collection: this.collection, model: this.collection.getElement() } ) );\r\n\t\t\tthis.footer.show( new FooterView( { collection: this.collection, model: this.collection.getElement() } ) );\r\n\t\t},\r\n\r\n\t\tchangePart: function() {\r\n\t\t\tthis.body.show(  new this.formContentView( { collection: this.collection.getElement().get( 'formContentData' ) } ) );\r\n\t\t\t/*\r\n\t\t\t * Scroll the page to the top of the form.\r\n\t\t\t */\r\n\t\t\tvar formTop = jQuery( this.body.el ).closest( '.nf-form-cont' ).offset().top;\r\n\t\t\tif ( jQuery( window ).scrollTop() > formTop - 50 ) {\r\n\t\t\t\tjQuery( window ).scrollTop( formTop - 50 );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tevents: {\r\n\t\t\t'click .nf-next': 'clickNext',\r\n\t\t\t'click .nf-previous': 'clickPrevious'\r\n\t\t},\r\n\r\n\t\tclickNext: function( e ) {\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.collection.next();\r\n\t\t},\r\n\r\n\t\tclickPrevious: function( e ) {\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.collection.previous();\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\treturn view;\r\n} );\n","define( 'models/partModel',[], function() {\r\n\tvar model = Backbone.Model.extend( {\r\n\t\tfieldErrors: {},\r\n\r\n\t\tdefaults: {\r\n\t\t\terrors: false,\r\n\t\t\tvisible: true,\r\n\t\t\ttitle: ''\r\n\t\t},\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tthis.filterFormContentData();\r\n\t\t\tthis.listenTo( this.get( 'formContentData' ), 'change:errors', this.maybeChangeActivePart );\r\n\t\t\tthis.fieldErrors[ this.cid ] = [];\r\n\t\t\tthis.on( 'change:visible', this.changeVisible, this );\r\n            // Cast order as a number to avoid string comparison.\r\n            this.set( 'order', Number( this.get( 'order' ) ) );\r\n\t\t},\r\n\r\n\t\tfilterFormContentData: function() {\r\n\t\t\tif ( ! this.get( 'formContentData' ) ) return;\r\n\t\t\tvar formContentData = this.get( 'formContentData' );\r\n\t\t\t/*\r\n\t\t\t * Update our formContentData by running it through our fromContentData filter\r\n\t\t\t */\r\n\t\t\tvar formContentLoadFilters = nfRadio.channel( 'formContent' ).request( 'get:loadFilters' );\r\n\t\t\t/* \r\n\t\t\t* Get our second filter, this will be the one with the highest priority after MP Forms.\r\n\t\t\t*/\r\n\t\t\tvar sortedArray = _.without( formContentLoadFilters, undefined );\r\n\t\t\tvar callback = sortedArray[ 1 ];\r\n\t\t\t/*\r\n\t\t\t * If our formContentData is an empty array, we want to pass the \"empty\" flag as true so that filters know it's purposefully empty.\r\n\t\t\t */\r\n\t\t\tvar empty = ( 0 == formContentData.length ) ? true : false;\r\n\t\t\t/*\r\n\t\t\t * TODO: This is a bandaid fix to prevent forms with layouts and parts from freaking out of layouts & styles are deactivated.\r\n\t\t\t * If Layouts is deactivated, it will try to grab the layout data and show the fields on the appropriate parts.\r\n\t\t\t */\r\n\t\t\tif ( 'undefined' == typeof formContentLoadFilters[4] && _.isArray( formContentData ) && 0 != formContentData.length && 'undefined' != typeof formContentData[0].cells ) {\r\n\t\t\t\t/*\r\n\t\t\t\t * We need to get our field keys from our layout data.\r\n\t\t\t\t * Layout data looks like:\r\n\t\t\t\t * Rows\r\n\t\t\t\t *   Row\r\n\t\t\t\t *     Cells\r\n\t\t\t\t *       Cell\r\n\t\t\t\t *         Fields\r\n\t\t\t\t *       Cell\r\n\t\t\t\t *         Fields\r\n\t\t\t\t *   Row\r\n\t\t\t\t *     Cells\r\n\t\t\t\t *       Cell\r\n\t\t\t\t *         Fields  \r\n\t\t\t\t */\r\n\t\t\t\tvar partFields = [];\r\n\t\t\t\tvar cells = _.pluck( formContentData, 'cells' );\r\n\t\t\t\t_.each( cells, function( cell ) {\r\n\t\t\t\t\tvar fields = _.flatten( _.pluck( cell, 'fields' ) );\r\n\t\t\t\t\tpartFields = _.union( partFields, fields );\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tformContentData = partFields;\r\n\r\n\t\t\t\tthis.set( 'formContentData', formContentData );\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( 'formContentData', callback( formContentData, this.collection.formModel, empty, formContentData ) );\r\n\t\t},\r\n\r\n\t\tmaybeChangeActivePart: function( fieldModel ) {\r\n\t\t\t/*\r\n\t\t\t * If we have an error on this part, add an error to our part model.\r\n\t\t\t *\r\n\t\t\t * If we are on a part that has a higher index than the current part, set this as current.\r\n\t\t\t */\r\n\t\t\tif ( 0 < fieldModel.get( 'errors' ).length ) {\r\n\t\t\t\tthis.set( 'errors', true );\r\n\t\t\t\tthis.fieldErrors[ this.cid ].push( fieldModel.get( 'key' ) );\r\n\t\t\t\t// this.set( 'fieldErrors', fieldModel.get( 'key' ) );\r\n\t\t\t\tif (\r\n\t\t\t\t\tthis.collection.getElement() != this &&\r\n\t\t\t\t\tthis.collection.indexOf( this.collection.getElement() ) > this.collection.indexOf( this )\r\n\r\n\t\t\t\t) {\r\n\t\t\t\t\tthis.collection.setElement( this );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.fieldErrors[ this.cid ] = _.without( this.fieldErrors[ this.cid ], fieldModel.get( 'key' ) );\r\n\t\t\t\tif ( 0 == this.fieldErrors[ this.cid ].length ) {\r\n\t\t\t\t\tthis.set( 'errors', false );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tvalidateFields: function() {\r\n\t\t\tthis.get( 'formContentData' ).validateFields();\r\n\t\t},\r\n\r\n\t\tchangeVisible: function() {\r\n\t\t\tif ( this.get( 'visible' ) ) {\r\n\t\t\t\tthis.get( 'formContentData' ).showFields();\r\n\t\t\t} else {\r\n\t\t\t\tthis.get( 'formContentData' ).hideFields();\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n\treturn model;\r\n} );\r\n\n","define( 'models/partCollection',[ 'models/partModel' ], function( PartModel ) {\r\n\tvar collection = Backbone.Collection.extend( {\r\n\t\tmodel: PartModel,\r\n\t\tcurrentElement: false,\r\n\r\n\t\tinitialize: function( models, options ){\r\n\t\t\tthis.formModel = options.formModel;\r\n\t\t},\r\n\t\t\r\n\t\tgetElement: function() {\r\n\t\t\t/*\r\n\t\t\t * If we haven't set an element yet, set it to the first one.\r\n\t\t\t */\r\n\t\t\tif ( ! this.currentElement ) {\r\n\t\t\t\tthis.setElement( this.at( 0 ), true );\r\n\t\t\t}\r\n\t\t\treturn this.currentElement;\r\n\t\t},\r\n\t\t  \r\n\t\tsetElement: function( model, silent ) {\r\n\t\t\tsilent = silent || false;\r\n\t\t\t/*\r\n\t\t\t * If we have part errors and aren't updating silently, check for part errors.\r\n\t\t\t */\r\n\t\t\tif ( ! silent ) {\r\n\t\t\t\tif ( this.partErrors() ) return;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.currentElement = model;\r\n\t\t\tif ( ! silent ) {\r\n\t\t\t\tthis.trigger( 'change:part', this );\r\n\t\t\t\tnfRadio.channel( 'nfMP' ).trigger( 'change:part', this );\r\n\t\t\t} \r\n\t\t},\r\n\t\t\r\n\t\tnext: function (){\r\n\t\t\t/*\r\n\t\t\t * If this isn't the last visible part, move forward.\r\n\t\t\t */\r\n\t\t\tif ( this.getVisibleParts().length - 1 != this.getVisibleParts().indexOf( this.getElement() ) ) {\r\n\t\t\t\tthis.setElement( this.getVisibleParts()[ this.getVisibleParts().indexOf( this.getElement() ) + 1 ] );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tprevious: function() {\r\n\t\t\t/*\r\n\t\t\t * If this isn't the first visible part, move backward.\r\n\t\t\t */\r\n\t\t\tif ( 0 != this.getVisibleParts().indexOf( this.getElement() ) ) {\r\n\t\t\t\tthis.setElement( this.getVisibleParts()[ this.getVisibleParts().indexOf( this.getElement() ) - 1 ] );\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tpartErrors: function() {\r\n\t\t\tif ( 'undefined' == typeof this.formModel.get( 'settings' ).mp_validate || 0 == this.formModel.get( 'settings' ).mp_validate ) return false;\r\n\t\t\t/*\r\n\t\t\t * Check to see if our parts have any errors.\r\n\t\t\t */\r\n\t\t\tthis.currentElement.validateFields();\r\n\t\t\treturn this.currentElement.get( 'errors' );\r\n\t\t},\r\n\r\n\t\tvalidateFields: function() {\r\n\t\t\t/*\r\n\t\t\t * call validateFields on each visible part\r\n\t\t\t */\r\n\t\t\t_.each( this.getVisibleParts(), function( partModel ) { partModel.validateFields(); } );\r\n\t\t},\r\n\r\n\t\tgetVisibleParts: function() {\r\n\t\t\treturn this.where( { visible: true } );\r\n\t\t}\r\n\t} );\r\n\r\n\treturn collection;\r\n} );\n","/**\r\n * Interprets formContent data when a form is loaded.\r\n * Also returns our MP Layout View to use in place of the standard form layout view.\r\n * \r\n * @package Ninja Forms Front-End\r\n * @subpackage Main App\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'controllers/loadFilters',[ 'views/formContent', 'models/partCollection' ], function( FormContentView, PartCollection ) {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tnfRadio.channel( 'formContent' ).request( 'add:viewFilter', this.getformContentView, 1 );\r\n\t\t\tnfRadio.channel( 'formContent' ).request( 'add:loadFilter', this.formContentLoad, 1 );\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Return the MP Content View\r\n\t\t * \r\n\t\t * @since  3.0\r\n\t\t * @param  {Backbon.Collection} collection formContentData\r\n\t\t * @return {Backbone.View}            Our MP Content View\r\n\t\t */\r\n\t\tgetformContentView: function( formContentData ) {\r\n\t\t\treturn FormContentView;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * When we load our front-end view, we filter the formContentData.\r\n\t\t * This turns the saved object into a Backbone Collection.\r\n\t\t * \r\n\t\t * @since  3.0\r\n\t\t * @param  array formContentData current value of our formContentData.\r\n\t\t * @return Backbone.Collection\r\n\t\t */\r\n\t\tformContentLoad: function( formContentData, formModel ) {\r\n\t\t\t/*\r\n\t\t\t * If the data has already been converted, just return it.\r\n\t\t\t */\r\n\t\t\tif ( true === formContentData instanceof PartCollection ) return formContentData;\r\n\t\t\t/*\r\n\t\t\t * If the data isn't converted, but is an array, let's make sure it's part data.\r\n\t\t\t */\r\n\t\t\tif ( _.isArray( formContentData ) && 0 != _.isArray( formContentData ).length  && 'undefined' != typeof _.first( formContentData ) && 'part' == _.first( formContentData ).type ) {\r\n\t\t\t\t/*\r\n\t\t\t\t * We have multi-part data. Let's convert it to a collection.\r\n\t\t\t\t */\r\n\t\t\t\tvar partCollection = new PartCollection( formContentData, { formModel: formModel } );\r\n\t\t\t} else {\r\n\t\t\t\t/*\r\n\t\t\t\t * We have unknown data. Create a new part collection and use the data as the content.\r\n\t\t\t\t */\r\n\t\t\t\tvar partCollection = new PartCollection( { formContentData: formContentData }, { formModel: formModel } );\r\n\t\t\t}\r\n\r\n\t\t\treturn partCollection;\r\n\t\t}\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","/**\r\n * Handles showing and hiding parts in response to Conditional Logic triggers.\r\n * \r\n * @package Ninja Forms Front-End\r\n * @subpackage Main App\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'controllers/conditionalLogic',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tnfRadio.channel( 'condition:trigger' ).reply( 'show_part', this.showPart, this );\r\n\t\t\tnfRadio.channel( 'condition:trigger' ).reply( 'hide_part', this.hidePart, this );\r\n\t\t},\r\n\r\n\t\tshowPart: function( conditionModel, then ) {\r\n\t\t\tconditionModel.set( 'alreadyTriggered', true );\r\n\t\t\tthis.changePartVisibility( conditionModel, then, true );\r\n\t\t\tconditionModel.set( 'alreadyTriggered', false );\r\n\t\t},\r\n\r\n\t\thidePart: function( conditionModel, then ) {\r\n\t\t\tconditionModel.set( 'alreadyTriggered', true );\r\n\t\t\tthis.changePartVisibility( conditionModel, then, false );\r\n\t\t\tconditionModel.set( 'alreadyTriggered', false );\r\n\t\t},\r\n\r\n\t\tchangePartVisibility: function( conditionModel, then, visible ) {\r\n\r\n\r\n            /**\r\n\t\t\t * Multi-Part Reset Flag\r\n\t\t\t *   Identifies the initial request of a nested loop of conditions\r\n\t\t\t *   so that the alreadyTriggered flags can be cleared.\r\n             */\r\n\t\t\tvar mpResetFlag = Date.now();\r\n\t\t\tif( ! conditionModel.collection.mpResetFlag ){\r\n                conditionModel.collection.mpResetFlag = mpResetFlag;\r\n\t\t\t}\r\n\r\n\t\t\tvar partCollection = conditionModel.collection.formModel.get( 'formContentData' );\r\n\t\t\tpartCollection.findWhere( { key: then.key } ).set( 'visible', visible );\r\n\r\n\t\t\t// Check our conditions again because we have just shown/hidden a part that could have conditions on it.\r\n\t\t\tconditionModel.collection.each( function( model ) {\r\n\t\t\t\t// Avoid triggering a model's own conditions.\r\n\t\t\t\tif( model == conditionModel ) return;\r\n\t\t\t\t// Avoid re-triggering conditions, which may cause an infinite loop.\r\n\t\t\t\tif( model.get( 'alreadyTriggered' ) ) return;\r\n\t\t\t\t// Trigger conditions.\r\n                model.checkWhen();\r\n                // Set a flag to avoid re-triggering these conditions.\r\n                model.set( 'alreadyTriggered', true );\r\n\t\t\t} );\r\n\r\n            /**\r\n\t\t\t * Reset Flag Check\r\n\t\t\t *   If is the initial request of the nested loop of conditions\r\n\t\t\t *   then clear the previously set alreadyTriggered flags.\r\n             */\r\n\t\t\tif( mpResetFlag == conditionModel.collection.mpResetFlag ){\r\n\t\t\t\t// Clear all alreadyTriggered flags.\r\n                conditionModel.collection.invoke( 'set', { 'alreadyTriggered': false } );\r\n                // Clear the Reset Flag.\r\n                conditionModel.collection.mpResetFlag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn controller;\r\n} );\r\n\n","/**\r\n * Handles making sure that any google recaptcha fields render if they are on this part.\r\n * \r\n * @package Ninja Forms Front-End\r\n * @subpackage Main App\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'controllers/renderRecaptcha',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( nfRadio.channel( 'nfMP' ), 'change:part', this.changePart, this );\r\n\t\t},\r\n\r\n\t\tchangePart: function( conditionModel, then ) {\r\n\t\t\tjQuery( '.g-recaptcha' ).each( function() {\r\n                var callback = jQuery( this ).data( 'callback' );\r\n                var fieldID = jQuery( this ).data( 'fieldid' );\r\n                if ( typeof window[ callback ] !== 'function' ){\r\n                    window[ callback ] = function( response ) {\r\n                        nfRadio.channel( 'recaptcha' ).request( 'update:response', response, fieldID );\r\n                    };\r\n                }\r\n\t\t\t\tvar opts = {\r\n\t\t\t\t\ttheme: jQuery( this ).data( 'theme' ),\r\n\t\t\t\t\tsitekey: jQuery( this ).data( 'sitekey' ),\r\n\t\t\t\t\tcallback: callback\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tgrecaptcha.render( jQuery( this )[0], opts );\r\n\t\t\t} );\r\n\t\t},\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","/**\r\n * Handles making sure that any help text render if they are on this part.\r\n *\r\n * @package Ninja Forms Front-End\r\n * @subpackage Main App\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'controllers/renderHelpText',[], function() {\r\n    var controller = Marionette.Object.extend( {\r\n        initialize: function() {\r\n            this.listenTo( nfRadio.channel( 'nfMP' ), 'change:part', this.changePart, this );\r\n        },\r\n\r\n        changePart: function( conditionModel, then ) {\r\n            jQuery( '.nf-help' ).each( function() {\r\n                var jBox = jQuery( this ).jBox( 'Tooltip', {\r\n                    theme: 'TooltipBorder',\r\n                    content: jQuery( this ).data( 'text' )\r\n                });\r\n            } );\r\n        },\r\n\r\n    });\r\n\r\n    return controller;\r\n} );\n","define( \r\n\t'controllers/loadControllers',[\r\n\t\t'controllers/conditionalLogic',\r\n\t\t'controllers/renderRecaptcha',\r\n\t\t'controllers/renderHelpText'\r\n\t],\r\n\tfunction\r\n\t(\r\n\t\tConditionalLogic,\r\n\t\tRenderRecaptcha,\r\n\t\tRenderHelpText\r\n\t)\r\n\t{\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tnew ConditionalLogic();\r\n\t\t\tnew RenderRecaptcha();\r\n\t\t\tnew RenderHelpText();\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","var nfRadio = Backbone.Radio;\r\n\r\nrequire( [ 'controllers/loadFilters', 'controllers/loadControllers' ], function( LoadFilters, LoadControllers ) {\r\n\r\n\tvar NFMultiPart = Marionette.Application.extend( {\r\n\r\n\t\tinitialize: function( options ) {\r\n\t\t\t// console.log( 'init mp' );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'form' ), 'before:filterData', this.loadFilters );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'form' ), 'loaded', this.loadControllers );\r\n\t\t},\r\n\r\n\t\tloadFilters: function( formModel ) {\r\n\t\t\tnew LoadFilters();\r\n\t\t},\r\n\r\n\t\tloadControllers: function( formModel ) {\r\n\t\t\tnew LoadControllers();\r\n\t\t},\r\n\r\n\t\tonStart: function() {\r\n\t\t}\r\n\t} );\r\n\r\n\tvar nfMultiPart = new NFMultiPart();\r\n\tnfMultiPart.start();\r\n} );\ndefine(\"main\", function(){});\n\n"]}